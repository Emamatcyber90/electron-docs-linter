[
  {
    "name": "clipboard",
    "main_process": true,
    "slug": "clipboard",
    "website_url": "http://electron.atom.io/docs/api/clipboard",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/clipboard.md",
    "type": "Object",
    "renderer_process": true,
    "description": "Perform copy and paste operations on the system clipboard."
  },
  {
    "name": "crashReporter",
    "main_process": true,
    "slug": "crash-reporter",
    "website_url": "http://electron.atom.io/docs/api/crash-reporter",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/crash-reporter.md",
    "type": "Object",
    "renderer_process": true,
    "description": "Submit crash reports to a remote server."
  },
  {
    "name": "nativeImage",
    "main_process": true,
    "slug": "native-image",
    "website_url": "http://electron.atom.io/docs/api/native-image",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/native-image.md",
    "type": "Object",
    "renderer_process": true,
    "description": "Create tray, dock, and application icons using PNG or JPG files."
  },
  {
    "name": "shell",
    "main_process": true,
    "slug": "shell",
    "website_url": "http://electron.atom.io/docs/api/shell",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/shell.md",
    "type": "Object",
    "renderer_process": true,
    "description": "Manage files and URLs using their default applications."
  },
  {
    "name": "app",
    "main_process": true,
    "slug": "app",
    "website_url": "http://electron.atom.io/docs/api/app",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/app.md",
    "type": "Object",
    "description": "Control your application's event lifecycle."
  },
  {
    "name": "autoUpdater",
    "main_process": true,
    "slug": "auto-updater",
    "website_url": "http://electron.atom.io/docs/api/auto-updater",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/auto-updater.md",
    "type": "Object",
    "description": "Enable apps to automatically update themselves."
  },
  {
    "name": "BrowserWindow",
    "main_process": true,
    "slug": "browser-window",
    "website_url": "http://electron.atom.io/docs/api/browser-window",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/browser-window.md",
    "type": "Class",
    "description": "Create and control browser windows.",
    "instance_methods": [
      {
        "name": "destroy",
        "signature": "()"
      },
      {
        "name": "close",
        "signature": "()"
      },
      {
        "name": "focus",
        "signature": "()"
      },
      {
        "name": "blur",
        "signature": "()"
      },
      {
        "name": "isFocused",
        "signature": "()"
      },
      {
        "name": "show",
        "signature": "()"
      },
      {
        "name": "showInactive",
        "signature": "()"
      },
      {
        "name": "hide",
        "signature": "()"
      },
      {
        "name": "isVisible",
        "signature": "()"
      },
      {
        "name": "maximize",
        "signature": "()"
      },
      {
        "name": "unmaximize",
        "signature": "()"
      },
      {
        "name": "isMaximized",
        "signature": "()"
      },
      {
        "name": "minimize",
        "signature": "()"
      },
      {
        "name": "restore",
        "signature": "()"
      },
      {
        "name": "isMinimized",
        "signature": "()"
      },
      {
        "name": "setFullScreen",
        "signature": "(flag)"
      },
      {
        "name": "isFullScreen",
        "signature": "()"
      },
      {
        "name": "setAspectRatio",
        "signature": "(aspectRatio[, extraSize])"
      },
      {
        "name": "setBounds",
        "signature": "(options[, animate])"
      },
      {
        "name": "getBounds",
        "signature": "()"
      },
      {
        "name": "setSize",
        "signature": "(width, height[, animate])"
      },
      {
        "name": "getSize",
        "signature": "()"
      },
      {
        "name": "setContentSize",
        "signature": "(width, height[, animate])"
      },
      {
        "name": "getContentSize",
        "signature": "()"
      },
      {
        "name": "setMinimumSize",
        "signature": "(width, height)"
      },
      {
        "name": "getMinimumSize",
        "signature": "()"
      },
      {
        "name": "setMaximumSize",
        "signature": "(width, height)"
      },
      {
        "name": "getMaximumSize",
        "signature": "()"
      },
      {
        "name": "setResizable",
        "signature": "(resizable)"
      },
      {
        "name": "isResizable",
        "signature": "()"
      },
      {
        "name": "setMovable",
        "signature": "(movable)"
      },
      {
        "name": "isMovable",
        "signature": "()"
      },
      {
        "name": "setMinimizable",
        "signature": "(minimizable)"
      },
      {
        "name": "isMinimizable",
        "signature": "()"
      },
      {
        "name": "setMaximizable",
        "signature": "(maximizable)"
      },
      {
        "name": "isMaximizable",
        "signature": "()"
      },
      {
        "name": "setFullScreenable",
        "signature": "(fullscreenable)"
      },
      {
        "name": "isFullScreenable",
        "signature": "()"
      },
      {
        "name": "setClosable",
        "signature": "(closable)"
      },
      {
        "name": "isClosable",
        "signature": "()"
      },
      {
        "name": "setAlwaysOnTop",
        "signature": "(flag)"
      },
      {
        "name": "isAlwaysOnTop",
        "signature": "()"
      },
      {
        "name": "center",
        "signature": "()"
      },
      {
        "name": "setPosition",
        "signature": "(x, y[, animate])"
      },
      {
        "name": "getPosition",
        "signature": "()"
      },
      {
        "name": "setTitle",
        "signature": "(title)"
      },
      {
        "name": "getTitle",
        "signature": "()"
      },
      {
        "name": "setSheetOffset",
        "signature": "(offsetY[, offsetX])"
      },
      {
        "name": "flashFrame",
        "signature": "(flag)"
      },
      {
        "name": "setSkipTaskbar",
        "signature": "(skip)"
      },
      {
        "name": "setKiosk",
        "signature": "(flag)"
      },
      {
        "name": "isKiosk",
        "signature": "()"
      },
      {
        "name": "getNativeWindowHandle",
        "signature": "()"
      },
      {
        "name": "hookWindowMessage",
        "signature": "(message, callback)"
      },
      {
        "name": "isWindowMessageHooked",
        "signature": "(message)"
      },
      {
        "name": "unhookWindowMessage",
        "signature": "(message)"
      },
      {
        "name": "unhookAllWindowMessages",
        "signature": "()"
      },
      {
        "name": "setRepresentedFilename",
        "signature": "(filename)"
      },
      {
        "name": "getRepresentedFilename",
        "signature": "()"
      },
      {
        "name": "setDocumentEdited",
        "signature": "(edited)"
      },
      {
        "name": "isDocumentEdited",
        "signature": "()"
      },
      {
        "name": "focusOnWebView",
        "signature": "()"
      },
      {
        "name": "blurWebView",
        "signature": "()"
      },
      {
        "name": "capturePage",
        "signature": "([rect, ]callback)"
      },
      {
        "name": "loadURL",
        "signature": "(url[, options])"
      },
      {
        "name": "reload",
        "signature": "()"
      },
      {
        "name": "setMenu",
        "signature": "(menu)"
      },
      {
        "name": "setProgressBar",
        "signature": "(progress)"
      },
      {
        "name": "setOverlayIcon",
        "signature": "(overlay, description)"
      },
      {
        "name": "setHasShadow",
        "signature": "(hasShadow)"
      },
      {
        "name": "hasShadow",
        "signature": "()"
      },
      {
        "name": "setThumbarButtons",
        "signature": "(buttons)"
      },
      {
        "name": "showDefinitionForSelection",
        "signature": "()"
      },
      {
        "name": "setIcon",
        "signature": "(icon)"
      },
      {
        "name": "setAutoHideMenuBar",
        "signature": "(hide)"
      },
      {
        "name": "isMenuBarAutoHide",
        "signature": "()"
      },
      {
        "name": "setMenuBarVisibility",
        "signature": "(visible)"
      },
      {
        "name": "isMenuBarVisible",
        "signature": "()"
      },
      {
        "name": "setVisibleOnAllWorkspaces",
        "signature": "(visible)"
      },
      {
        "name": "isVisibleOnAllWorkspaces",
        "signature": "()"
      },
      {
        "name": "setIgnoreMouseEvents",
        "signature": "(ignore)"
      },
      {
        "name": "setFocusable",
        "signature": "(focusable)"
      }
    ]
  },
  {
    "name": "contentTracing",
    "main_process": true,
    "slug": "content-tracing",
    "website_url": "http://electron.atom.io/docs/api/content-tracing",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/content-tracing.md",
    "type": "Object",
    "description": "Collect tracing data from Chromium's content module for finding performance\nbottlenecks and slow operations."
  },
  {
    "name": "dialog",
    "main_process": true,
    "slug": "dialog",
    "website_url": "http://electron.atom.io/docs/api/dialog",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/dialog.md",
    "type": "Object",
    "description": "Display native system dialogs for opening and saving files, alerting, etc."
  },
  {
    "name": "ipcMain",
    "main_process": true,
    "slug": "ipc-main",
    "website_url": "http://electron.atom.io/docs/api/ipc-main",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/ipc-main.md",
    "type": "Object",
    "description": "Communicate asynchronously from the main process to renderer processes."
  },
  {
    "name": "globalShortcut",
    "main_process": true,
    "slug": "global-shortcut",
    "website_url": "http://electron.atom.io/docs/api/global-shortcut",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/global-shortcut.md",
    "type": "Object",
    "description": "Detect keyboard events when the application does not have keyboard focus."
  },
  {
    "name": "Menu",
    "main_process": true,
    "slug": "menu",
    "website_url": "http://electron.atom.io/docs/api/menu",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/menu.md",
    "type": "Class",
    "description": "Create native application menus and context menus.",
    "instance_methods": [
      {
        "name": "popup",
        "signature": "([browserWindow, x, y, positioningItem])"
      },
      {
        "name": "append",
        "signature": "(menuItem)"
      },
      {
        "name": "insert",
        "signature": "(pos, menuItem)"
      }
    ]
  },
  {
    "name": "MenuItem",
    "main_process": true,
    "slug": "menu-item",
    "website_url": "http://electron.atom.io/docs/api/menu-item",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/menu-item.md",
    "type": "Class",
    "description": "Add items to native application menus and context menus.",
    "instance_methods": []
  },
  {
    "name": "powerMonitor",
    "main_process": true,
    "slug": "power-monitor",
    "website_url": "http://electron.atom.io/docs/api/power-monitor",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/power-monitor.md",
    "type": "Object",
    "description": "Monitor power state changes."
  },
  {
    "name": "powerSaveBlocker",
    "main_process": true,
    "slug": "power-save-blocker",
    "website_url": "http://electron.atom.io/docs/api/power-save-blocker",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/power-save-blocker.md",
    "type": "Object",
    "description": "Block the system from entering low-power (sleep) mode."
  },
  {
    "name": "protocol",
    "main_process": true,
    "slug": "protocol",
    "website_url": "http://electron.atom.io/docs/api/protocol",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/protocol.md",
    "type": "Object",
    "description": "Register a custom protocol and intercept existing protocol requests."
  },
  {
    "name": "screen",
    "main_process": true,
    "slug": "screen",
    "website_url": "http://electron.atom.io/docs/api/screen",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/screen.md",
    "type": "Object",
    "renderer_process": true,
    "description": "Retrieve information about screen size, displays, cursor position, etc."
  },
  {
    "name": "session",
    "main_process": true,
    "slug": "session",
    "website_url": "http://electron.atom.io/docs/api/session",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/session.md",
    "type": "Object",
    "description": "Manage browser sessions, cookies, cache, proxy settings, etc."
  },
  {
    "name": "systemPreferences",
    "main_process": true,
    "slug": "system-preferences",
    "website_url": "http://electron.atom.io/docs/api/system-preferences",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/system-preferences.md",
    "type": "Object",
    "description": "Get system preferences."
  },
  {
    "name": "Tray",
    "main_process": true,
    "slug": "tray",
    "website_url": "http://electron.atom.io/docs/api/tray",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/tray.md",
    "type": "Class",
    "description": "Add icons and context menus to the system's notification area.",
    "instance_methods": []
  },
  {
    "name": "webContents",
    "main_process": true,
    "slug": "web-contents",
    "website_url": "http://electron.atom.io/docs/api/web-contents",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/web-contents.md",
    "type": "Object",
    "description": "Render and control web pages."
  },
  {
    "name": "process",
    "main_process": true,
    "slug": "process",
    "website_url": "http://electron.atom.io/docs/api/process",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/process.md",
    "type": "Object",
    "description": "Extensions to process object."
  },
  {
    "name": "desktopCapturer",
    "renderer_process": true,
    "slug": "desktop-capturer",
    "website_url": "http://electron.atom.io/docs/api/desktop-capturer",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/desktop-capturer.md",
    "type": "Object",
    "description": "List getUserMedia sources for capturing audio, video, and images from a\nmicrophone, camera, or screen."
  },
  {
    "name": "ipcRenderer",
    "renderer_process": true,
    "slug": "ipc-renderer",
    "website_url": "http://electron.atom.io/docs/api/ipc-renderer",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/ipc-renderer.md",
    "type": "Object",
    "description": "Communicate asynchronously from a renderer process to the main process."
  },
  {
    "name": "remote",
    "renderer_process": true,
    "slug": "remote",
    "website_url": "http://electron.atom.io/docs/api/remote",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/remote.md",
    "type": "Object",
    "description": "Use main process modules from the renderer process."
  },
  {
    "name": "webFrame",
    "renderer_process": true,
    "slug": "web-frame",
    "website_url": "http://electron.atom.io/docs/api/web-frame",
    "github_docs_url": "https://github.com/electron/electron/blob/v1.2.3/docs/api/web-frame.md",
    "type": "Object",
    "description": "Customize the rendering of the current web page."
  }
]